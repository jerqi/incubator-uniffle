<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.tencent.rss</groupId>
  <artifactId>rss-main</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Remote Shuffle Service Project Parent POM</name>
  <description>Remote Shuffle Service Project</description>

  <parent>
    <groupId>org.apache</groupId>
    <artifactId>apache</artifactId>
    <version>18</version>
  </parent>

  <properties>
    <hadoop.version>2.7.3</hadoop.version>
    <hadoop.scope>compile</hadoop.scope>
    <spark2.version>2.4.5</spark2.version>
    <grpc.version>1.33.0</grpc.version>
    <protobuf.version>3.12.0</protobuf.version>
    <commons-codec.version>1.9</commons-codec.version>
    <httpclient.version>4.5.3</httpclient.version>
    <httpcore.version>4.4.4</httpcore.version>
    <jackson.version>2.9.9</jackson.version>
    <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
    <jetty.version>9.3.24.v20180605</jetty.version>
    <json4s.version>3.2.11</json4s.version>
    <junit.version>4.12</junit.version>
    <libthrift.version>0.9.3</libthrift.version>
    <kryo.version>2.22</kryo.version>
    <metrics.version>3.1.0</metrics.version>
    <mockito.version>1.10.19</mockito.version>
    <netty.spark-2.11.version>4.0.37.Final</netty.spark-2.11.version>
    <netty.version>${netty.spark-2.11.version}</netty.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <py4j.version>0.10.7</py4j.version>
    <scala-2.11.version>2.11.12</scala-2.11.version>
    <scala.binary.version>2.11</scala.binary.version>
    <scala.version>${scala-2.11.version}</scala.version>
    <scalatest.version>2.2.4</scalatest.version>
    <scalatra.version>2.3.0</scalatra.version>
    <java.version>1.8</java.version>
    <test.redirectToFile>true</test.redirectToFile>
    <execution.root>${user.dir}</execution.root>
    <copyright.header>""</copyright.header>
    <skipDeploy>false</skipDeploy>
    <protoc.version>3.12.0</protoc.version>
    <MaxPermGen>512m</MaxPermGen>
    <CodeCacheSize>512m</CodeCacheSize>
    <error_prone_annotations.version>2.3.4</error_prone_annotations.version>
    <tomcat.version>6.0.53</tomcat.version>
    <slf4j.version>1.7.25</slf4j.version>

    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

  </properties>

  <repositories>
    <repository>
      <id>central</id>
      <!-- This should be at top, it makes maven try the central repo first and then others and hence faster dep resolution -->
      <name>Maven Repository</name>
      <url>https://repo1.maven.org/maven2</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>apache-repo</id>
      <name>Apache Repository</name>
      <url>https://repository.apache.org/content/repositories/releases</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <modules>
    <module>api</module>
<!--    <module>client</module>-->
<!--    <module>client-spark2</module>-->
    <module>common</module>
<!--    <module>coordinator</module>-->
    <module>proto</module>
    <module>server</module>
    <module>storage</module>
  </modules>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
    </dependency>

  </dependencies>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java-util</artifactId>
        <version>${protobuf.version}</version>
      </dependency>

      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-netty-shaded</artifactId>
        <version>${grpc.version}</version>
      </dependency>

      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-protobuf</artifactId>
        <version>${grpc.version}</version>
      </dependency>

      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-stub</artifactId>
        <version>${grpc.version}</version>
      </dependency>

      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-testing</artifactId>
        <version>${grpc.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>${metrics.version}</version>
      </dependency>

      <dependency>
        <artifactId>rss-proto</artifactId>
        <groupId>com.tencent.rss</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>annotations-api</artifactId>
        <version>${tomcat.version}</version>
        <scope>provided</scope> <!-- not needed at runtime -->
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>${error_prone_annotations.version}</version> <!-- prefer to use 2.3.3 or later -->
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.3.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>2.4.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.10</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.4.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19</version>
          <configuration>
            <systemProperties>
              <java.awt.headless>true</java.awt.headless>
              <java.io.tmpdir>${project.build.directory}/tmp</java.io.tmpdir>
              <project.version>${project.version}</project.version>
            </systemProperties>
            <redirectTestOutputToFile>${test.redirectToFile}</redirectTestOutputToFile>
            <useFile>${test.redirectToFile}</useFile>
            <argLine>-ea -Xmx2g -Xss4m</argLine>
            <failIfNoTests>false</failIfNoTests>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-remote-resources-plugin</artifactId>
          <version>1.5</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>1.13</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.0.0-M1</version>
          <configuration>
            <doctitle>Remote Shuffle Service ${project.version} Java API</doctitle>
            <windowtitle>Remove Shuffle Service ${project.version} JavaDoc</windowtitle>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.xolstice.maven.plugins</groupId>
          <artifactId>protobuf-maven-plugin</artifactId>
          <version>0.6.1</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <fork>true</fork>
          <meminitial>512m</meminitial>
          <compilerArgs>
            <arg>-Xlint:all,-options,-path</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <inherited>false</inherited>
        <configuration>
          <rules>
            <requireJavaVersion>
              <version>${java.version}</version>
            </requireJavaVersion>
            <requireMavenVersion>
              <version>[3.0.0,)</version>
            </requireMavenVersion>
          </rules>
        </configuration>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <!-- Cleans up files that tests append to (because we have two test plugins). -->
          <execution>
            <id>pre-test-clean</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <delete file="${project.build.directory}/unit-tests.log" quiet="true" />
                <delete dir="${project.build.directory}/jacoco" quiet="true" />
                <delete dir="${project.build.directory}/tmp" quiet="true" />
              </target>
            </configuration>
          </execution>
          <!-- Create the temp directory to be  used by tests. -->
          <execution>
            <id>create-tmp-dir</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <mkdir dir="${project.build.directory}/tmp" />
              </target>
            </configuration>
          </execution>
          <!--
            Copy the template scalastyle / checkstyle configuration and replace the copyright
            header.
          -->
          <execution>
            <id>setup-style-checker</id>
            <phase>verify</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy file="${execution.root}/scalastyle.xml"
                  tofile="${project.build.directory}/scalastyle.xml" />
                <replace file="${project.build.directory}/scalastyle.xml"
                  token="{{COPYRIGHT_HEADER}}"
                  value="${copyright.header}" />
                <copy file="${execution.root}/checkstyle.xml"
                  tofile="${project.build.directory}/checkstyle.xml" />
                <echo file="${project.build.directory}/checkstyle.header"
                  message="${copyright.header}" />
                <replace file="${project.build.directory}/checkstyle.xml"
                  token="{{HEADER_FILE}}"
                  value="${project.build.directory}/checkstyle.header" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.scalastyle</groupId>
        <artifactId>scalastyle-maven-plugin</artifactId>
        <version>0.8.0</version>
        <configuration>
          <verbose>false</verbose>
          <failOnViolation>true</failOnViolation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <failOnWarning>false</failOnWarning>
          <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
          <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
          <configLocation>${project.build.directory}/scalastyle.xml</configLocation>
          <outputFile>${basedir}/target/scalastyle-output.xml</outputFile>
          <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
          <outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <configLocation>checkstyle.xml</configLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>false</linkXRef>
          <failOnViolation>true</failOnViolation>
          <violationSeverity>warning</violationSeverity>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>${skipDeploy}</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <outputDirectory>${project.build.directory}/jars</outputDirectory>
          <useSubDirectoryPerType>false</useSubDirectoryPerType>
          <includeScope>runtime</includeScope>
          <silent>true</silent>
          <overWriteReleases>true</overWriteReleases>
          <overWriteSnapshots>true</overWriteSnapshots>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <!-- Override this plugin with parent POM to add DISCLAIMER file to artifacts. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-remote-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>process-resource-bundles</id>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <resourceBundles>
                <resourceBundle>org.apache:apache-jar-resource-bundle:1.4</resourceBundle>
                <resourceBundle>org.apache.apache.resources:apache-incubator-disclaimer-resource-bundle:1.2-SNAPSHOT</resourceBundle>
              </resourceBundles>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>

  <profiles>

    <profile>
      <!-- This will search remote and local repos to generate THIRD-PARTY license file, make sure
      livy artifacts existed in either remote or local repos, otherwise run mvn install before. -->
      <id>generate-third-party</id>
      <activation>
        <property>
          <name>generate-third-party</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <inherited>false</inherited>
            <configuration>
              <outputDirectory>${execution.root}</outputDirectory>
              <thirdPartyFilename>THIRD-PARTY</thirdPartyFilename>
              <sortArtifactByName>true</sortArtifactByName>
              <fileTemplate>${execution.root}/dev/third-party-file.ftl</fileTemplate>
              <useMissingFile>true</useMissingFile>
              <missingFile>${execution.root}/dev/third-party-missing-license.properties</missingFile>
            </configuration>
            <executions>
              <execution>
                <phase>prepare-package</phase>
                <goals>
                  <goal>aggregate-add-third-party</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>public-docs</id>
      <activation>
        <property>
          <name>public-docs</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <failOnError>true</failOnError>
              <excludePackageNames>*.test,*.example,*.client,*.annotations,*.rsc</excludePackageNames>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
