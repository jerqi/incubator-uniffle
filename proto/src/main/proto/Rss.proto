syntax = "proto3";
option java_package = "com.tencent.rss.proto";
option java_outer_classname = "RssProtos";
option java_generate_equals_and_hash = true;
package rss.common;

/** An unqiue identifier of shuffle block */
message ShuffleBlockIdProto {
  string appId = 1;
  uint32 upstreamId = 2;
  uint32 downstreamId = 3;
  uint32 uniqueId = 4;
}

/** A structure to represent shuffle server */
message ShuffleServer {
  string serverId = 1;
  string serverIp = 2;
  uint32 serverPort = 3;
}

/** Status code to identify the status of response */
enum StatusCode {
  SUCCESS = 0;
  INTERNAL_ERROR = 1;
  // add more status
}

/****************** Client / Server requests/reponses ********/
/** Proto to upload shuffle block to Shuffle Server */
message ShuffleBlockUploadRequestProto {
  ShuffleBlockIdProto blockId = 1;
  bool isFinalBlock = 2;
  bytes block = 3;
}

message ShuffleBlockUploadResponseProto {
  StatusCode status = 1;
  string retMsg = 2;
}

/****************** Server / Coordinator requests/reponses ********/
/** Proto to send Shuffle Server heart message to Coordinator */
message ServerHeartbeatRequestProto {
  ShuffleServer server = 1;
}

/****************** Client / Coordinator requests/reponses ********/
/** Proto to request candidate Shuffle Server from Coordinator */
message CandidateShuffleServerRequestProto {
  string appId = 1;
  uint32 downstreamId = 2;
  string clientIp = 3;
}

message CandidateShuffleServerResponseProto {
  ShuffleServer server = 1;
}

/****************** Client / Metadata Server requests/reponses ********/
message ShuffleBlocksReportRequestProto {
  repeated ShuffleBlockIdProto blocks = 1;
}

message UpstreamTaskFinishedRequestProto {
  uint32 upstreamId = 1;
}

message UpstreamTaskFinishedResponseProto {
  uint32 upstreamId = 1;
  StatusCode status = 2;
  string retMsg = 3;
}

/****************** Server / Metadata Server requests/reponses ********/
message ShuffleBlocksCommitRequestProto {
  repeated ShuffleBlockIdProto blocks = 1;
}








